(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{345:function(v,_,t){"use strict";t.r(_);var s=t(7),i=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"git介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git介绍"}},[v._v("#")]),v._v(" Git介绍")]),v._v(" "),_("h2",{attrs:{id:"一-认识版本控制-版本控制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一-认识版本控制-版本控制"}},[v._v("#")]),v._v(" 一. 认识版本控制（版本控制）")]),v._v(" "),_("p",[_("strong",[v._v("什么是版本控制？")])]),v._v(" "),_("p",[v._v(" 版本控制的英文是"),_("code",[v._v("Version control")]),v._v("；")]),v._v(" "),_("p",[v._v(" 是维护工程蓝图的标准作法，能追踪工程蓝图从诞生一直到定案的过程；")]),v._v(" "),_("p",[v._v(" 版本控制也是一种软件工程技巧，借此能在软件开发的过程中，确保由不同人所编辑的同一程序文件都得到同步；")]),v._v(" "),_("p",[v._v("◼ "),_("strong",[v._v("简单来说，版本控制在软件开发中，可以帮助程序员进行代码的追踪、维护、控制等等一系列的操作。")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230607192317.png",alt:""}})]),v._v(" "),_("h2",{attrs:{id:"二-版本控制的功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二-版本控制的功能"}},[v._v("#")]),v._v(" 二. 版本控制的功能")]),v._v(" "),_("p",[v._v("对于我们日常开发，我们常常面临如下一些问题，通过版本控制可以很好的解决：")]),v._v(" "),_("p",[v._v("◼ 不同版本的存储管理：")]),v._v(" "),_("p",[v._v(" 一个项目会不断进行版本的迭代，来修复之前的一些问题、增加新的功能、需求，甚至包括项目的重构；")]),v._v(" "),_("p",[v._v(" 如果我们通过手动来维护一系列的项目备份，简直是一场噩梦；")]),v._v(" "),_("p",[v._v("◼ 重大版本的备份维护：")]),v._v(" "),_("p",[v._v(" 对于很多重大的版本，我们会进行备份管理；")]),v._v(" "),_("p",[v._v("◼ 恢复之前的项目版本：")]),v._v(" "),_("p",[v._v(" 当我们开发过程中发生一些严重的问题时，想要恢复之前的操作或者回到之前某个版本；")]),v._v(" "),_("p",[v._v("◼ 记录项目的点点滴滴：")]),v._v(" "),_("p",[v._v(" 如果我们每一个功能的修改、bug的修复、新的需求更改都需要记录下来，版本控制可以很好的解决；")]),v._v(" "),_("p",[v._v("◼ 多人开发的代码合并：")]),v._v(" "),_("p",[v._v(" 项目中通常都是多人开发，将多人代码进行合并，并且在出现冲突时更好的进行处理；")]),v._v(" "),_("h2",{attrs:{id:"三-版本控制的历史"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三-版本控制的历史"}},[v._v("#")]),v._v(" 三. 版本控制的历史")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("版本控制的史前时代（没有版本控制）：")]),v._v(" "),_("p",[v._v(" 人们通常通过文件备份的方式来进行管理，再通过diff命令来对比两个文件的差异；")])]),v._v(" "),_("li",[_("p",[v._v("CVS（Concurrent Versions System）")]),v._v(" "),_("p",[v._v(" 第一个被大规模使用的版本控制工具，诞生于1985年；")]),v._v(" "),_("p",[v._v(" 由荷兰阿姆斯特丹VU大学的Dick Grune教授实现的，也算是SVN的前身（SVN的出现就是为了取代CVS的）。")])]),v._v(" "),_("li",[_("p",[v._v("SVN（Subversion）")]),v._v(" "),_("p",[v._v(" 因其命令行工具名为svn因此通常被简称为SVN；")]),v._v(" "),_("p",[v._v(" SVN由CollabNet公司于2000年资助并发起开发，目的是取代CVS，对CVS进行了很多的优化；")]),v._v(" "),_("p",[v._v(" SVN和CVS一样，也属于集中式版本控制工具；")]),v._v(" "),_("p",[v._v(" SVN在早期公司开发中使用率非常高，但是目前已经被Git取代；")])]),v._v(" "),_("li",[_("p",[v._v("Git（Linus的作品）")]),v._v(" "),_("p",[v._v(" 早期的时候，Linux社区使用的是BitKeeper来进行版本控制；")]),v._v(" "),_("p",[v._v(" 但是因为一些原因，BitKeeper想要收回对Linux社区的免费授权；")]),v._v(" "),_("p",[v._v(" 于是Linus用了大概一周的时间，开发了Git用来取代BitKeeper；")]),v._v(" "),_("p",[v._v(" Linus完成了Git的核心设计，在之后Linus功成身退，将Git交由另外一个Git的主要贡献者Junio C Hamano来维护；")])])]),v._v(" "),_("h2",{attrs:{id:"四-集中式版本控制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四-集中式版本控制"}},[v._v("#")]),v._v(" 四. 集中式版本控制")]),v._v(" "),_("p",[v._v("◼ CVS和SVN都是是属于集中式版本控制系统（Centralized Version Control Systems，简称 CVCS）")]),v._v(" "),_("p",[v._v("有一台服务器，能过集中的存储数据。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230607195539.png",alt:""}})]),v._v(" "),_("p",[v._v("缺点：")]),v._v(" "),_("ol",[_("li",[v._v("第二个人上传，会覆盖前一个人的代码（文件冲突）")]),v._v(" "),_("li",[v._v("中央服务器会宕机，会丢失")])]),v._v(" "),_("h2",{attrs:{id:"五-分布式版本控制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#五-分布式版本控制"}},[v._v("#")]),v._v(" 五. 分布式版本控制")]),v._v(" "),_("p",[v._v("◼ Git是属于分布式版本控制系统（Distributed Version Control System，简")]),v._v(" "),_("p",[v._v("称 DVCS）")]),v._v(" "),_("p",[_("strong",[v._v("在本地有自己的仓库，如果中央服务器宕机了，也能放在本地仓储存储，等中央服务器恢复了，在把本地仓库同步到分布式版本控制。")])]),v._v(" "),_("p",[v._v(" 客户端并不只提取最新版本的文件快照， 而是`把代码仓库完整地镜像下")]),v._v(" "),_("p",[v._v("来，包括完整的历史记录`；")]),v._v(" "),_("p",[v._v(" 这么一来，任何一处协同工作用的"),_("code",[v._v("服务器发生故障")]),v._v("，事后都可以用任何")]),v._v(" "),_("p",[v._v("一个镜像出来的本地仓库恢复；")]),v._v(" "),_("p",[v._v(" 因为每一次的克隆操作，实际上都是一次对代码仓库的"),_("code",[v._v("完整备份")]),v._v("；")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230607212454.png",alt:""}})])])}),[],!1,null,null,null);_.default=i.exports}}]);