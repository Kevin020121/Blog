(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{359:function(s,t,a){"use strict";a.r(t);var v=a(7),n=Object(v.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"初始node-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始node-js"}},[s._v("#")]),s._v(" 初始Node.js")]),s._v(" "),t("h2",{attrs:{id:"一-什么是node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-什么是node"}},[s._v("#")]),s._v(" 一. 什么是Node？")]),s._v(" "),t("p",[s._v("Node.js是一个基于"),t("code",[s._v("V8 JavaScript引擎")]),s._v("的"),t("code",[s._v("JavaScript运行时环境")]),s._v("。")]),s._v(" "),t("p",[s._v("也就是说Node.js基于V8引擎来执行JavaScript的代码，但是不仅仅只有V8引擎：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("前面我们知道V8可以嵌入到任何C ++应用程序中，无论是Chrome还是Node.js，事实上都是嵌入了V8引擎来执行JavaScript代码；")])]),s._v(" "),t("li",[t("p",[s._v("但是在Chrome浏览器中，还需要解析、渲染HTML、CSS等相关渲染引擎，另外还需要提供支持浏览器操作的API、浏览器自己的事件循环等；")])]),s._v(" "),t("li",[t("p",[s._v("另外，在Node.js中我们也需要进行一些额外的操作，比如文件系统"),t("strong",[s._v("读/写、网络IO、加密、压缩解压文件")]),s._v("等操作；")])])]),s._v(" "),t("h2",{attrs:{id:"二-浏览器和node-js架构区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-浏览器和node-js架构区别"}},[s._v("#")]),s._v(" 二. 浏览器和Node.js架构区别")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230619002318.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"_2-1-node-js架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-node-js架构"}},[s._v("#")]),s._v(" 2.1 Node.js架构")]),s._v(" "),t("ul",[t("li",[s._v("我们编写的JavaScript代码会经过V8引擎，再通过Node.js的Bindings，将任务放到Libuv的事件循环中；")]),s._v(" "),t("li",[s._v("libuv（Unicorn Velociraptor—独角伶盗龙）是使用C语言编写的库；")]),s._v(" "),t("li",[s._v("libuv提供了事件循环、文件系统读写、网络IO、线程池等等内容；")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230619002416.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"三-node-js的应用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-node-js的应用场景"}},[s._v("#")]),s._v(" 三. Node.js的应用场景")]),s._v(" "),t("p",[t("strong",[s._v("应用一")]),s._v("：目前前端开发的库都是以node包的形式进行管理；")]),s._v(" "),t("p",[t("strong",[s._v("应用二")]),s._v("：npm、yarn、pnpm工具成为前端开发使用最多的工具；")]),s._v(" "),t("p",[t("strong",[s._v("应用三")]),s._v("：越来越多的公司使用Node.js作为web服务器开发、中间件、代理服务器；")]),s._v(" "),t("p",[t("strong",[s._v("应用四")]),s._v("：大量项目需要借助Node.js完成前后端渲染的同构应用；")]),s._v(" "),t("p",[t("strong",[s._v("应用五")]),s._v("：资深前端工程师需要为项目编写脚本工具（前端工程师编写脚本通常会使用JavaScript，而不是Python或者shell）；")]),s._v(" "),t("p",[t("strong",[s._v("应用六")]),s._v("：很多企业在使用Electron来开发桌面应用程序；")]),s._v(" "),t("h2",{attrs:{id:"四-node的安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四-node的安装"}},[s._v("#")]),s._v(" 四. Node的安装")]),s._v(" "),t("p",[s._v("官网："),t("a",{attrs:{href:"https://nodejs.org/zh-cn",target:"_blank",rel:"noopener noreferrer"}},[s._v("Node.js (nodejs.org)"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("Node.js是在2009年诞生，大版本分为两个："),t("strong",[s._v("LTS")]),s._v("、"),t("strong",[s._v("Current")])]),s._v(" "),t("p",[s._v(" LTS版本：（Long-term support, 长期支持）相对稳定一些，推荐线上环境使用该版本；")]),s._v(" "),t("p",[s._v(" Current版本：最新的Node版本，包含很多新特性；")]),s._v(" "),t("blockquote",[t("p",[s._v("一般使用LTS版本即可")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230619002903.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"五-node的版本工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五-node的版本工具"}},[s._v("#")]),s._v(" 五. Node的版本工具")]),s._v(" "),t("p",[s._v("希望通过可以快速更新或切换多个版本时，可以借助于一些工具：")]),s._v(" "),t("p",[t("code",[s._v("nvm")]),s._v("：Node Version Manager；")]),s._v(" "),t("p",[t("code",[s._v("n")]),s._v("：Interactively Manage Your Node.js Versions（交互式管理你的Node.js版本）")]),s._v(" "),t("blockquote",[t("p",[s._v("但是它们都不支持Windows版本的系统")])]),s._v(" "),t("p",[s._v("Windows版本的nvm："),t("a",{attrs:{href:"https://github.com/coreybutler/nvm-windows",target:"_blank",rel:"noopener noreferrer"}},[s._v("coreybutler/nvm-windows: A node.js version management utility for Windows. Ironically written in Go. (github.com)"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230619003120.png",alt:""}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230619003140.png",alt:""}})]),s._v(" "),t("ul",[t("li",[t("p",[s._v("通过 "),t("code",[s._v("nvm install latest")]),s._v(" 安装current版本的node")])]),s._v(" "),t("li",[t("p",[s._v("通过"),t("code",[s._v("nvm install lst")]),s._v(" 安装LST版本的node")])]),s._v(" "),t("li",[t("p",[s._v("通过 "),t("code",[s._v("nvm list")]),s._v(" 展示目前安装的所有版本")])]),s._v(" "),t("li",[t("p",[s._v("通过 "),t("code",[s._v("nvm use")]),s._v(" 切换版本")])])]),s._v(" "),t("h2",{attrs:{id:"六-javascript代码执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六-javascript代码执行"}},[s._v("#")]),s._v(" 六. JavaScript代码执行")]),s._v(" "),t("p",[s._v("如果我们编写一个js文件，里面存放JavaScript代码，如何来执行它呢？")]),s._v(" "),t("p",[s._v("目前我们知道有两种方式可以执行：")]),s._v(" "),t("ol",[t("li",[s._v("将代码交给浏览器执行；")]),s._v(" "),t("li",[s._v("将代码载入到node环境中执行；")])]),s._v(" "),t("p",[t("strong",[s._v("如果我们希望把代码交给浏览器执行：")])]),s._v(" "),t("ol",[t("li",[s._v("需要通过让浏览器加载、解析html代码，所以我们需要创建一个html文件；")]),s._v(" "),t("li",[s._v("在html中通过script标签，引入js文件；")]),s._v(" "),t("li",[s._v("当浏览器遇到script标签时，就会根据src加载、执行JavaScript代码；")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230619003434.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("如果我们希望把js文件交给node执行：")])]),s._v(" "),t("ol",[t("li",[s._v("首先电脑上需要安装Node.js环境，安装过程中会自动配置环境变量；")]),s._v(" "),t("li",[s._v("可以通过终端命令node js文件的方式来载入和执行对应的js文件；")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230619003444.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"七-node的repl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七-node的repl"}},[s._v("#")]),s._v(" 七. Node的REPL")]),s._v(" "),t("p",[s._v("什么是REPL呢？感觉挺高大上")]),s._v(" "),t("blockquote",[t("p",[s._v("REPL是Read-Eval-Print Loop的简称，翻译为“读取-求值-输出”循环；")])]),s._v(" "),t("p",[s._v("REPL是一个简单的、交互式的编程环境；")]),s._v(" "),t("p",[s._v("事实上，我们浏览器的console就可以看成一个REPL。")]),s._v(" "),t("p",[s._v("Node也给我们提供了一个REPL环境，我们可以在其中演练简单的代码。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230619003550.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"八-node程序传递参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#八-node程序传递参数"}},[s._v("#")]),s._v(" 八. Node程序传递参数")]),s._v(" "),t("p",[s._v("◼ 正常情况下执行一个node程序，直接跟上我们对应的文件即可：")]),s._v(" "),t("p",[s._v("◼ 但是，在某些情况下执行node程序的过程中，我们可能希望给node传递一些参数：")]),s._v(" "),t("p",[s._v("◼ 如果我们这样来使用程序，就意味着我们需要在程序中获取到传递的参数：")]),s._v(" "),t("p",[s._v(" 获取参数其实是在process的内置对象中的；")]),s._v(" "),t("p",[s._v(" 如果我们直接打印这个内置对象，它里面包含特别的信息：")]),s._v(" "),t("p",[s._v("✓ 其他的一些信息，比如版本、操作系统等大家可以自行查看，后面用到一些其他的我们还会提到；")]),s._v(" "),t("p",[s._v("◼ 现在，我们先找到其中的argv属性：")]),s._v(" "),t("p",[s._v(" 我们发现它是一个数组，里面包含了我们需要的参数；")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" # "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" # "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("45.6")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230619003947.png",alt:""}})]),s._v(" "),t("p",[s._v("为什么叫argv呢？")]),s._v(" "),t("p",[s._v("◼ 在C/C++程序中的main函数中，实际上可以获取到两个参数：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("argc")]),s._v("：argument counter的缩写，传递参数的个数；")]),s._v(" "),t("li",[t("code",[s._v("argv")]),s._v("：argument vector（向量、矢量）的缩写，传入的具体参数。")])]),s._v(" "),t("h2",{attrs:{id:"九-常见的全局对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#九-常见的全局对象"}},[s._v("#")]),s._v(" 九. 常见的全局对象")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230619004345.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"_9-1-dirname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-dirname"}},[s._v("#")]),s._v(" 9.1  __dirname")]),s._v(" "),t("p",[s._v("作用：获取当前文件所在的路径：")]),s._v(" "),t("blockquote",[t("p",[s._v("注意：不包括后面的文件名")])]),s._v(" "),t("h3",{attrs:{id:"_9-2-filename"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-filename"}},[s._v("#")]),s._v(" 9.2 __filename")]),s._v(" "),t("p",[s._v("作用：获取当前文件所在的路径和文件名称：")]),s._v(" "),t("p",[s._v(" 注意：包括后面的文件名称")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://markdown123.oss-cn-beijing.aliyuncs.com/img/20230619004612.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"_9-3-process对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-process对象"}},[s._v("#")]),s._v(" 9.3 process对象")]),s._v(" "),t("p",[s._v("作用：process提供了Node进程中相关的信息：")]),s._v(" "),t("p",[s._v(" 比如Node的运行环境、参数信息等；")]),s._v(" "),t("p",[s._v(" 后面在项目中，我也会讲解，如何将一些环境变量读取到 process 的 env 中；")]),s._v(" "),t("h3",{attrs:{id:"_9-4-console对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-console对象"}},[s._v("#")]),s._v(" 9.4 console对象")]),s._v(" "),t("p",[s._v("作用：提供了简单的调试控制台，在前面讲解输入内容时已经学习过了。")]),s._v(" "),t("p",[s._v(" 更加详细的查看官网文档：https://nodejs.org/api/console.html")]),s._v(" "),t("h3",{attrs:{id:"_9-5-定时器函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-定时器函数"}},[s._v("#")]),s._v(" 9.5 定时器函数")]),s._v(" "),t("p",[s._v("在Node中使用定时器有好几种方式：")]),s._v(" "),t("ol",[t("li",[t("code",[s._v("setTimeout(callback, delay[, ...args])")]),s._v("：callback在delay毫秒后执行一次；")]),s._v(" "),t("li",[t("code",[s._v("setInterval(callback, delay[, ...args])")]),s._v("：callback每delay毫秒重复执行一次；")]),s._v(" "),t("li",[t("code",[s._v("setImmediate(callback[, ...args])")]),s._v("：callbackI / O事件后的回调的“立即”执行；")])]),s._v(" "),t("h3",{attrs:{id:"_9-6-global对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-6-global对象"}},[s._v("#")]),s._v(" 9.6 global对象")]),s._v(" "),t("p",[s._v("global是一个全局对象，事实上前端我们提到的process、console、setTimeout等都有被放到global中：")]),s._v(" "),t("p",[s._v(" 我们之前讲过：在新的标准中还有一个globalThis，也是指向全局对象的；")]),s._v(" "),t("p",[s._v(" 类似于浏览器中的window；")]),s._v(" "),t("blockquote",[t("p",[s._v("浏览器里的window就是node里面的global    window == global")])])])}),[],!1,null,null,null);t.default=n.exports}}]);