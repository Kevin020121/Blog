(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{360:function(t,a,s){"use strict";s.r(a);var r=s(7),l=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一-没有模块化的弊端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-没有模块化的弊端"}},[t._v("#")]),t._v(" 一. 没有模块化的弊端")]),t._v(" "),a("ol",[a("li",[t._v("第一，我必须记得每一个模块中返回对象的命名，才能在其他模块使用过程中正确的使用；")]),t._v(" "),a("li",[t._v("第二，代码写起来混乱不堪，每个文件中的代码都需要包裹在一个匿名函数中来编写；")]),t._v(" "),a("li",[t._v("第三，在没有合适的规范情况下，每个人、每个公司都可能会任意命名、甚至出现模块名称相同的情况；")])]),t._v(" "),a("p",[a("strong",[t._v("所以，我们会发现，虽然实现了模块化，但是我们的实现过于简单，并且是没有规范的。")])]),t._v(" "),a("ol",[a("li",[t._v("我们需要制定一定的规范来约束每个人都按照这个规范去编写模块化的代码；")]),t._v(" "),a("li",[t._v("这个规范中应该包括核心功能：模块本身可以导出暴露的属性，模块又可以导入自己需要的属性；")]),t._v(" "),a("li",[t._v("JavaScript社区为了解决上面的问题，涌现出一系列好用的规范，接下来我们就学习具有代表性的一些规范。")])]),t._v(" "),a("h2",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])])])}),[],!1,null,null,null);a.default=l.exports}}]);